/*

Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

*/

void helper(vector<vector<int> > &out, vector<int> tmp, int n, int k, int num) {
    if (k<0) return;
    if (k==0) {
        out.push_back(tmp);
        return;
    }
    if (num<=n) {
        helper(out,tmp,n,k,num+1); // skip this num
        tmp.push_back(num); // pick this num
        helper(out,tmp,n,k-1,num+1);
    }
}

class Solution {
public:
    vector<vector<int> > combine(int n, int k) {        
        vector<vector<int> > out;
        vector<int> tmp;
        helper(out,tmp,n,k,1);
        return out;
    }
};
