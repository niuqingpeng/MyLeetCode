/*

You are climbing a stair case. It takes n steps to reach to the top.
Each time you can either climb 1 or 2 steps.
In how many distinct ways can you climb to the top?

Note: it is actually similar problem to fibonacci numbers

*/

class Solution {
public:
    int climbStairs(int n) {
        if (n==1) return 1;
        if (n==2) return 2;
        
        // f(n) = f(n-2) + f(n-1)
        int x = 1;
        int y = 2;
        int z;
        for (int i=3; i<=n; i++) {
            z = x + y;
            x = y;
            y = z;
        }
        return z;
    }
};
