/*

Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

For example,
Given:
s1 = "aabcc",
s2 = "dbbca",

When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false.

Note: DP Solution
F(i,j) = (F(i,j-1) && s2[j-1] == s3[i+j-1]) || 
         (F(i-1,j) && s1[i-1] == s3[i+j-1])

*/

class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int n1 = s1.size();
        int n2 = s2.size();
        int n3 = s3.size();
        if ((n1+n2)!=n3) return false;
        vector< vector<bool> > table(n1+1, vector<bool>(n2+1, false));
        table[0][0] = true;
        for(int i=1; i<=n1; i++) {
            table[i][0] = table[i-1][0] && (s1[i-1] == s3[i-1]);
        }
        for(int j=1; j<=n2; j++) {
            table[0][j] = table[0][j-1] && (s2[j-1] == s3[j-1]);
        }
        for(int i=1; i<=n1; i++) {
            for(int j=1; j<=n2; j++) {
                table[i][j] = ((table[i][j-1] && (s2[j-1] == s3[i+j-1])) ||
                            (table[i-1][j] && (s1[i-1] == s3[i+j-1])));
            }
        }
        return table[n1][n2];
    }
};
