/*

Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. 
(each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

a) Insert a character
b) Delete a character
c) Replace a character

*/

class Solution {
public:
    int minDistance(string word1, string word2) {
        int n1 = word1.size();
        int n2 = word2.size();
        int table[n1+1][n2+1];
        for (int i=0; i<=n1; i++) table[i][0]=i;
        for (int j=0; j<=n2; j++) table[0][j]=j;
        for (int i=1; i<=n1; i++) {
            for (int j=1; j<=n2; j++) {
                if(word1[i-1]==word2[j-1])
                    table[i][j] = table[i-1][j-1]; // no change
                else {
                    int mn = min(ar[i-1][j],ar[i][j-1]);
                    ar[i][j] = min(ar[i-1][j-1],mn) + 1;
                }
            }
        }
        return ar[n1][n2];   
    }
};
