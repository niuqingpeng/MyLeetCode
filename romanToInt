/*

Given a roman numeral, convert it to an integer.
Input is guaranteed to be within the range from 1 to 3999.

*/

class Solution {
public:
    int romanToInt(string s) {

        assert(s.size()>=1);

        unordered_map<char,int> m;
        m['I'] = 1;
        m['V'] = 5;
        m['X'] = 10;
        m['L'] = 50;
        m['C'] = 100;
        m['D'] = 500;
        m['M'] = 1000;
        
        int len = s.size();
        int sum = m[s[len-1]];
        for (int i=len-2; i>=0; i--) {
            if (m[s[i]]<m[s[i+1]]) {
                sum-=m[s[i]];
            }
            else {
                sum+=m[s[i]];
            }
        }
        return sum;
    }
};
