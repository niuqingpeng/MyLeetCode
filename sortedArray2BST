/*

Given an array where elements are sorted in ascending order, 
convert it to a height balanced BST.

*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

TreeNode* helper(vector<int> &num, int l, int r) {
    if (l>r) return NULL;
    int m = (l+r)/2;
    TreeNode *node = new TreeNode(num[m]);
    node->left = helper(num,l,m-1);
    node->right = helper(num,m+1,r);
}

class Solution {
public:
    TreeNode *sortedArrayToBST(vector<int> &num) {

        int r = num.size()-1;
        int l = 0;
        TreeNode * root = helper(num,l,r);
        return root;
    }
};
