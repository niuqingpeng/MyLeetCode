/*

Given a m x n grid filled with non-negative numbers, 
find a path from top left to bottom right 
which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

*/

class Solution {
public:
    int minPathSum(vector<vector<int> > &grid) {
        int x = grid.size();
        if (x==0) return 0;
        int y = grid[0].size();
        if (y==0) return 0;
        int table[x][y];
        table[0][0] = grid[0][0];
        for (int i=1; i<x; i++) table[i][0] = table[i-1][0]+grid[i][0];
        for (int j=1; j<y; j++) table[0][j] = table[0][j-1]+grid[0][j];
        for (int i=1; i<x; i++) {
            for (int j=1; j<y; j++) {
                table[i][j] = min(table[i-1][j],table[i][j-1]) + grid[i][j];
            }
        }
        return table[x-1][y-1];
    }
};
