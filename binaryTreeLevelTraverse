/*

Given a binary tree, return the level order traversal of its nodes' values. 
(ie, from left to right, level by level).

*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

void traverse(vector<vector<int> > &out, TreeNode *n, int level) {
    
    if (n == NULL) return;
    if (level > out.size()) {
        vector<int> tmp;
        out.push_back(tmp);
    }
    out[level-1].push_back(n->val);
    traverse(out, n->left, level + 1);
    traverse(out, n->right, level + 1);
}

class Solution {
public:
    vector<vector<int> > levelOrder(TreeNode *root) {
        
        vector<vector<int> > out;
        traverse(out, root, 1);
        return out;
    }
};
