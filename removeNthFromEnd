/*

Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.

*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *removeNthFromEnd(ListNode *head, int n) {

        ListNode *p1 = head;
        ListNode *p2 = head;
        for (int i = 0; i < n; i++) p1 = p1->next;
        if (p1 == NULL) {
            p1 = head->next;
            delete head;
            return p1;
        }
        while (p1->next != NULL) {
            p1 = p1->next;
            p2 = p2->next;
        }
        p1 = p2->next;
        p2->next = p1->next;
        delete p1;
        return head;
    }
};
