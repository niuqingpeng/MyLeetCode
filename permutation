/*

Given a collection of numbers, return all possible permutations.

For example,
[1,2,3] have the following permutations:
[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], and [3,2,1].

*/

void perm(vector<vector<int> > &out, vector<int> num,int k) {
    int n = num.size();
    if (k==n) {
        out.push_back(num);
        return;
    }
    for (int i=k; i<n; i++) {
        swap(num[k],num[i]);
        perm(out,num,k+1);
        swap(num[k],num[i]);
    }
}

class Solution {
public:
    vector<vector<int> > permute(vector<int> &num) {
        vector<vector<int> > out;
        perm(out,num,0);
        return out;
    }
};
